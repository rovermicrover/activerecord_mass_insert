# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
default: &default
  working_directory: ~/activerecord_mass_insert

  steps:
    - checkout

    - run:
        name: Setup Code Climate test-reporter
        command: |
        # download test reporter as a static binary
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

    - run:
        name: install dependencies
        command: bundle install --jobs=4 --retry=3

    - run:
        name: install dependencies versions
        command: bin/setup

    - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:5432 -timeout 1m

    - run:
        name: Create Test Result Folder
        command: mkdir /tmp/test-results

    - run:
        name: rubocop
        command: bundle exec rubocop -o /tmp/test-results/rubocop.json -f j

    - run:
        name: brakeman
        command: bundle exec brakeman -q --force-scan --add-libs-path ./lib/ -o /tmp/test-results/brakeman.txt

    - run:
        name: run tests against activerecord 4.2
        environment:
          TEST_POSTGRESQL_PORT: 5432
          TEST_POSTGRESQL_HOST: localhost
          TEST_POSTGRESQL_USER: spec_user
        command: |
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
          bundle exec appraisal activerecord-4.2 rspec --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/activerecord-4.2-rspec.xml \
                          --format progress \
                          $TEST_FILES

    - run:
        name: run tests against activerecord 5.0
        environment:
          TEST_POSTGRESQL_PORT: 5432
          TEST_POSTGRESQL_HOST: localhost
          TEST_POSTGRESQL_USER: spec_user
        command: |
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
          bundle exec appraisal activerecord-5.0 rspec --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/activerecord-5.0-rspec.xml \
                          --format progress \
                          $TEST_FILES

    - run:
        name: run tests  against activerecord 5.1
        environment:
          TEST_POSTGRESQL_PORT: 5432
          TEST_POSTGRESQL_HOST: localhost
          TEST_POSTGRESQL_USER: spec_user
        command: |
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
          bundle exec appraisal activerecord-5.1 rspec --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/activerecord-5.1-rspec.xml \
                          --format progress \
                          $TEST_FILES

    - run:
        name: run tests  against activerecord 5.2
        environment:
          TEST_POSTGRESQL_PORT: 5432
          TEST_POSTGRESQL_HOST: localhost
          TEST_POSTGRESQL_USER: spec_user
        command: |
          [[ -n ${CC_TEST_REPORTER_ID} ]] && ./cc-test-reporter before-build
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
          bundle exec appraisal activerecord-5.2 rspec --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/activerecord-5.2-rspec.xml \
                          --format progress \
                          $TEST_FILES
          [[ -n ${CC_TEST_REPORTER_ID} ]] && ./cc-test-reporter after-build --coverage-input-type simplecov

    - store_test_results:
        path: /tmp/test-results

version: 2.1
jobs:
  build-ruby-2-6:
    docker:
      - image: circleci/ruby:2.6
      - image: circleci/postgres:11
        environment: # environment variables for database
          POSTGRES_DB: postgres
          POSTGRES_USER: spec_user
          POSTGRES_PASSWORD: ""
          CC_TEST_REPORTER_ID: df0fdb5028d5457a5706f6aad35787a11d15a014a07c3149e34c7fc1feb842f6

    <<: *default

  build-ruby-2-5:
    docker:
      - image: circleci/ruby:2.5
      - image: circleci/postgres:11
        environment: # environment variables for database
          POSTGRES_DB: postgres
          POSTGRES_USER: spec_user
          POSTGRES_PASSWORD: ""

    <<: *default

  build-ruby-2-4:
    docker:
      - image: circleci/ruby:2.4
      - image: circleci/postgres:11
        environment: # environment variables for database
          POSTGRES_DB: postgres
          POSTGRES_USER: spec_user
          POSTGRES_PASSWORD: ""

    <<: *default

  build-postgres-10:
    docker:
      - image: circleci/ruby:2.6
      - image: circleci/postgres:10
        environment: # environment variables for database
          POSTGRES_DB: postgres
          POSTGRES_USER: spec_user
          POSTGRES_PASSWORD: ""

    <<: *default

  build-postgres-9-6:
    docker:
      - image: circleci/ruby:2.6
      - image: circleci/postgres:9.6
        environment: # environment variables for database
          POSTGRES_DB: postgres
          POSTGRES_USER: spec_user
          POSTGRES_PASSWORD: ""

    <<: *default

  build-postgres-9-5:
    docker:
      - image: circleci/ruby:2.6
      - image: circleci/postgres:9.5
        environment: # environment variables for database
          POSTGRES_DB: postgres
          POSTGRES_USER: spec_user
          POSTGRES_PASSWORD: ""

    <<: *default

  build-performance:
    docker:
      - image: circleci/ruby:2.6
      - image: circleci/postgres:11
        environment: # environment variables for database
          POSTGRES_DB: postgres
          POSTGRES_USER: spec_user
          POSTGRES_PASSWORD: ""

    working_directory: ~/activerecord_mass_insert

    steps:
      - checkout

      - run:
          name: install dependencies
          command: bundle install --jobs=4 --retry=3

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Create Test Result Folder
          command: mkdir /tmp/test-results

      - run:
          name: Performance Run
          environment:
            TEST_POSTGRESQL_PORT: 5432
            TEST_POSTGRESQL_HOST: localhost
            TEST_POSTGRESQL_USER: spec_user
          command: bundle exec ruby spec/performance.rb > /tmp/test-results/benchmark.txt

      - store_artifacts:
          path: /tmp/test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-ruby-2-6
      - build-ruby-2-5
      - build-ruby-2-4
      - build-postgres-10
      - build-postgres-9-6
      - build-postgres-9-5
      - build-performance